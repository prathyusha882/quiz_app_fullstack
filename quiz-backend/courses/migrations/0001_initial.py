# Generated by Django 5.2.4 on 2025-08-03 06:00

import django.db.models.deletion
import mptt.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("quizzes", "0003_tag_alter_option_options_alter_question_options_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=250, unique=True)),
                ("description", models.TextField()),
                ("short_description", models.CharField(blank=True, max_length=300)),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        default="beginner",
                        max_length=15,
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(default=0, help_text="Duration in hours"),
                ),
                ("total_lessons", models.IntegerField(default=0)),
                ("total_quizzes", models.IntegerField(default=0)),
                ("is_free", models.BooleanField(default=True)),
                (
                    "price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="course_covers/"
                    ),
                ),
                (
                    "video_intro",
                    models.URLField(
                        blank=True, help_text="YouTube/Vimeo intro video URL"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("allow_enrollment", models.BooleanField(default=True)),
                (
                    "max_enrollments",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum number of enrollments (null for unlimited)",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_courses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="courses", to="quizzes.tag"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseEnrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "progress_percentage",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("completed_lessons", models.IntegerField(default=0)),
                ("total_lessons", models.IntegerField(default=0)),
                ("enrolled_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                (
                    "payment_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("payment_currency", models.CharField(default="USD", max_length=3)),
                ("payment_status", models.CharField(default="pending", max_length=20)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="courses.course",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_enrollments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-enrolled_at"],
                "unique_together": {("user", "course")},
            },
        ),
        migrations.CreateModel(
            name="CourseCertificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("certificate_id", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("certificate_number", models.CharField(max_length=50, unique=True)),
                ("issued_at", models.DateTimeField(auto_now_add=True)),
                ("valid_until", models.DateTimeField(blank=True, null=True)),
                ("is_valid", models.BooleanField(default=True)),
                (
                    "certificate_data",
                    models.JSONField(
                        default=dict, help_text="Store certificate template data"
                    ),
                ),
                (
                    "pdf_file",
                    models.FileField(
                        blank=True, null=True, upload_to="course_certificates/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "enrollment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.courseenrollment",
                    ),
                ),
            ],
            options={
                "ordering": ["-issued_at"],
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=250)),
                ("description", models.TextField(blank=True)),
                (
                    "content",
                    models.TextField(
                        blank=True, help_text="Rich text content for the lesson"
                    ),
                ),
                (
                    "video_url",
                    models.URLField(blank=True, help_text="YouTube/Vimeo video URL"),
                ),
                (
                    "video_duration",
                    models.IntegerField(
                        default=0, help_text="Video duration in seconds"
                    ),
                ),
                (
                    "lesson_type",
                    models.CharField(
                        choices=[
                            ("video", "Video Lesson"),
                            ("text", "Text Lesson"),
                            ("interactive", "Interactive Lesson"),
                            ("quiz", "Quiz Lesson"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                (
                    "is_free",
                    models.BooleanField(
                        default=True,
                        help_text="Free lesson (accessible without enrollment)",
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=True, help_text="Required lesson for course completion"
                    ),
                ),
                (
                    "order",
                    models.IntegerField(default=0, help_text="Order within course"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="courses.course",
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="courses.lesson",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "created_at"],
                "unique_together": {("course", "order")},
            },
        ),
        migrations.CreateModel(
            name="CourseRating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("review", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="courses.course",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("user", "course")},
            },
        ),
        migrations.CreateModel(
            name="LessonProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="not_started",
                        max_length=20,
                    ),
                ),
                (
                    "progress_percentage",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("video_watched_seconds", models.IntegerField(default=0)),
                ("video_completed", models.BooleanField(default=False)),
                ("quiz_attempts", models.IntegerField(default=0)),
                (
                    "best_score",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                (
                    "enrollment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lesson_progress",
                        to="courses.courseenrollment",
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="progress",
                        to="courses.lesson",
                    ),
                ),
            ],
            options={
                "ordering": ["lesson__order"],
                "unique_together": {("enrollment", "lesson")},
            },
        ),
    ]
