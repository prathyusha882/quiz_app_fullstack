# Generated by Django 5.2.4 on 2025-08-03 06:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SystemAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_users", models.IntegerField(default=0)),
                ("active_users_today", models.IntegerField(default=0)),
                ("active_users_week", models.IntegerField(default=0)),
                ("active_users_month", models.IntegerField(default=0)),
                ("total_quizzes", models.IntegerField(default=0)),
                ("total_quiz_attempts", models.IntegerField(default=0)),
                (
                    "average_quiz_completion_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("total_courses", models.IntegerField(default=0)),
                ("total_course_enrollments", models.IntegerField(default=0)),
                (
                    "average_course_completion_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("average_response_time", models.DurationField(blank=True, null=True)),
                (
                    "error_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "uptime_percentage",
                    models.DecimalField(decimal_places=2, default=100.0, max_digits=5),
                ),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "monthly_recurring_revenue",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("date", models.DateField(unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "System Analytics",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="UserAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_sessions", models.IntegerField(default=0)),
                ("total_session_duration", models.DurationField(blank=True, null=True)),
                ("last_session_at", models.DateTimeField(blank=True, null=True)),
                ("quizzes_attempted", models.IntegerField(default=0)),
                ("quizzes_completed", models.IntegerField(default=0)),
                ("total_quiz_time", models.DurationField(blank=True, null=True)),
                (
                    "average_quiz_score",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("courses_enrolled", models.IntegerField(default=0)),
                ("courses_completed", models.IntegerField(default=0)),
                ("total_course_time", models.DurationField(blank=True, null=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("login_count", models.IntegerField(default=0)),
                ("page_views", models.IntegerField(default=0)),
                ("average_response_time", models.DurationField(blank=True, null=True)),
                ("error_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "User Analytics",
                "ordering": ["-last_activity"],
            },
        ),
        migrations.CreateModel(
            name="ErrorLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "error_level",
                    models.CharField(
                        choices=[
                            ("debug", "Debug"),
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("critical", "Critical"),
                        ],
                        default="error",
                        max_length=10,
                    ),
                ),
                ("error_type", models.CharField(max_length=255)),
                ("error_message", models.TextField()),
                ("session_id", models.CharField(blank=True, max_length=255)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("stack_trace", models.TextField(blank=True)),
                ("request_data", models.JSONField(blank=True, default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("is_resolved", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["error_level", "timestamp"],
                        name="analytics_e_error_l_891b8c_idx",
                    ),
                    models.Index(
                        fields=["error_type", "timestamp"],
                        name="analytics_e_error_t_7bf40c_idx",
                    ),
                    models.Index(
                        fields=["is_resolved", "timestamp"],
                        name="analytics_e_is_reso_f30608_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="EventTracking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("page_view", "Page View"),
                            ("quiz_start", "Quiz Start"),
                            ("quiz_complete", "Quiz Complete"),
                            ("course_enroll", "Course Enrollment"),
                            ("course_complete", "Course Complete"),
                            ("payment", "Payment"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("error", "Error"),
                        ],
                        max_length=20,
                    ),
                ),
                ("session_id", models.CharField(blank=True, max_length=255)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                ("event_data", models.JSONField(blank=True, default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["event_type", "timestamp"],
                        name="analytics_e_event_t_b91dcc_idx",
                    ),
                    models.Index(
                        fields=["user", "timestamp"],
                        name="analytics_e_user_id_193be9_idx",
                    ),
                    models.Index(
                        fields=["session_id", "timestamp"],
                        name="analytics_e_session_4bf78e_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PerformanceMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("response_time", "Response Time"),
                            ("error_rate", "Error Rate"),
                            ("throughput", "Throughput"),
                            ("memory_usage", "Memory Usage"),
                            ("cpu_usage", "CPU Usage"),
                            ("disk_usage", "Disk Usage"),
                        ],
                        max_length=20,
                    ),
                ),
                ("value", models.DecimalField(decimal_places=4, max_digits=10)),
                ("unit", models.CharField(blank=True, max_length=20)),
                ("endpoint", models.CharField(blank=True, max_length=255)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["metric_type", "timestamp"],
                        name="analytics_p_metric__d772e7_idx",
                    ),
                    models.Index(
                        fields=["endpoint", "timestamp"],
                        name="analytics_p_endpoin_1e746e_idx",
                    ),
                ],
            },
        ),
    ]
