# Generated by Django 5.2.4 on 2025-08-03 05:29

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("quizzes", "0003_tag_alter_option_options_alter_question_options_and_more"),
        ("results", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="useranswer",
            options={"ordering": ["question__order"]},
        ),
        migrations.RemoveField(
            model_name="useranswer",
            name="chosen_option",
        ),
        migrations.RemoveField(
            model_name="useranswer",
            name="chosen_text_answer",
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="browser_info",
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="correct_answers",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="incorrect_answers",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="ip_address",
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="is_completed",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="is_submitted",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="is_valid",
            field=models.BooleanField(
                default=True, help_text="Mark as invalid if cheating detected"
            ),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="percentage_score",
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="session",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="quizzes.quizsession",
            ),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="started_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="time_limit_exceeded",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="unanswered_questions",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="user_agent",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="quizattempt",
            name="violations_count",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="answered_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="chosen_options",
            field=models.ManyToManyField(
                blank=True, related_name="user_answers", to="quizzes.option"
            ),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="graded_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="graded_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="grading_notes",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="is_manually_graded",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="manual_score",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="points_earned",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="points_possible",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="text_answer",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="time_spent",
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="uploaded_file",
            field=models.FileField(blank=True, null=True, upload_to="user_uploads/"),
        ),
        migrations.AlterField(
            model_name="quizattempt",
            name="submitted_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="quizattempt",
            name="time_taken",
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AlterUniqueTogether(
            name="quizattempt",
            unique_together={("user", "quiz", "started_at")},
        ),
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("certificate_id", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("certificate_number", models.CharField(max_length=50, unique=True)),
                ("issued_at", models.DateTimeField(auto_now_add=True)),
                ("valid_until", models.DateTimeField(blank=True, null=True)),
                ("is_valid", models.BooleanField(default=True)),
                (
                    "certificate_data",
                    models.JSONField(
                        default=dict, help_text="Store certificate template data"
                    ),
                ),
                (
                    "pdf_file",
                    models.FileField(blank=True, null=True, upload_to="certificates/"),
                ),
                (
                    "attempt",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="results.quizattempt",
                    ),
                ),
            ],
            options={
                "ordering": ["-issued_at"],
            },
        ),
        migrations.CreateModel(
            name="QuizAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_attempts", models.IntegerField(default=0)),
                ("total_participants", models.IntegerField(default=0)),
                (
                    "average_score",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("average_time", models.DurationField(blank=True, null=True)),
                (
                    "pass_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "question_analytics",
                    models.JSONField(
                        default=dict, help_text="Store per-question statistics"
                    ),
                ),
                (
                    "daily_stats",
                    models.JSONField(
                        default=dict, help_text="Daily participation statistics"
                    ),
                ),
                (
                    "weekly_stats",
                    models.JSONField(
                        default=dict, help_text="Weekly participation statistics"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "quiz",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="quizzes.quiz"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Quiz Analytics",
            },
        ),
        migrations.CreateModel(
            name="Leaderboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField()),
                (
                    "percentage_score",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("time_taken", models.DurationField()),
                ("rank", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "attempt",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="results.quizattempt",
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leaderboard_entries",
                        to="quizzes.quiz",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["rank", "time_taken"],
                "unique_together": {("quiz", "user", "attempt")},
            },
        ),
    ]
